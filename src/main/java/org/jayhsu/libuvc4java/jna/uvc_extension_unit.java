package org.jayhsu.libuvc4java.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\libuvc.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class uvc_extension_unit extends Structure {
	/** C type : uvc_extension_unit* */
	public uvc_extension_unit.ByReference prev;
	/** C type : uvc_extension_unit* */
	public uvc_extension_unit.ByReference next;
	public byte bUnitID;
	/** C type : uint8_t[16] */
	public byte[] guidExtensionCode = new byte[16];
	public long bmControls;
	public uvc_extension_unit() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("prev", "next", "bUnitID", "guidExtensionCode", "bmControls");
	}
	/**
	 * @param prev C type : uvc_extension_unit*<br>
	 * @param next C type : uvc_extension_unit*<br>
	 * @param guidExtensionCode C type : uint8_t[16]
	 */
	public uvc_extension_unit(uvc_extension_unit.ByReference prev, uvc_extension_unit.ByReference next, byte bUnitID, byte guidExtensionCode[], long bmControls) {
		super();
		this.prev = prev;
		this.next = next;
		this.bUnitID = bUnitID;
		if ((guidExtensionCode.length != this.guidExtensionCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.guidExtensionCode = guidExtensionCode;
		this.bmControls = bmControls;
	}
	public uvc_extension_unit(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends uvc_extension_unit implements Structure.ByReference {
		
	};
	public static class ByValue extends uvc_extension_unit implements Structure.ByValue {
		
	};
}
