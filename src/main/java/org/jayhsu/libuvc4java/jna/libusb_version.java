package org.jayhsu.libuvc4java.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * \ingroup libusb_lib<br>
 * Structure providing the version of the libusb runtime<br>
 * <i>native declaration : include\libusb.h:1013</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class libusb_version extends Structure {
	public short major;
	public short minor;
	public short micro;
	public short nano;
	/** C type : const char* */
	public Pointer rc;
	/** C type : const char* */
	public Pointer describe;
	public libusb_version() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("major", "minor", "micro", "nano", "rc", "describe");
	}
	/**
	 * @param rc C type : const char*<br>
	 * @param describe C type : const char*
	 */
	public libusb_version(short major, short minor, short micro, short nano, Pointer rc, Pointer describe) {
		super();
		this.major = major;
		this.minor = minor;
		this.micro = micro;
		this.nano = nano;
		this.rc = rc;
		this.describe = describe;
	}
	public libusb_version(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends libusb_version implements Structure.ByReference {
		
	};
	public static class ByValue extends libusb_version implements Structure.ByValue {
		
	};
}
