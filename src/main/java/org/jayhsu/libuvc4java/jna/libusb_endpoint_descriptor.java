package org.jayhsu.libuvc4java.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * \ingroup libusb_desc<br>
 * A structure representing the standard USB endpoint descriptor. This<br>
 * descriptor is documented in section 9.6.6 of the USB 3.0 specification.<br>
 * All multiple-byte fields are represented in host-endian format.<br>
 * <i>native declaration : include\libusb.h:558</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class libusb_endpoint_descriptor extends Structure {
	public byte bLength;
	public byte bDescriptorType;
	public byte bEndpointAddress;
	public byte bmAttributes;
	public short wMaxPacketSize;
	public byte bInterval;
	public byte bRefresh;
	public byte bSynchAddress;
	/** C type : const unsigned char* */
	public Pointer extra;
	public int extra_length;
	public libusb_endpoint_descriptor() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("bLength", "bDescriptorType", "bEndpointAddress", "bmAttributes", "wMaxPacketSize", "bInterval", "bRefresh", "bSynchAddress", "extra", "extra_length");
	}
	public libusb_endpoint_descriptor(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends libusb_endpoint_descriptor implements Structure.ByReference {
		
	};
	public static class ByValue extends libusb_endpoint_descriptor implements Structure.ByValue {
		
	};
}
